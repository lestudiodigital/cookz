{"version":3,"sources":["src/ga.js","src/functional.js","src/custom.js","src/state/Signal.js","src/state/createStore.js","src/state/index.js","src/store.js","index.js","test.js"],"names":["init","props","console","log","SignalListener","owner","fn","ctx","once","removeNode","node","prev","next","_first","_last","Signal","prototype","dispatch","a0","a1","a2","a3","a4","call","unlisten","listen","listenOnce","unlistenAll","StoreSignal","value","current","Object","create","constructor","undefined","set","force","get","createStore","state","signals","k","freeze","TYPES","GA","FUNCTIONAL","CUSTOM","plugins","storeValues","store","params","forEach","plugin","type","performance","ga","functional","func","name","UA","anonymizeIp","val"],"mappings":"AIAA,ACAA;;AGAA;;AAEA,IAAMkD,MAAM,GAAG,CACb;AACEG,EAAAA,IAAI,EAAEV,aAAME;AADd,CADa,EAIb;ANNF,ADAA,ADAA,AGAA,ACEA,AEFA,AEOIQ,EAAAA,IAAI,EAAEV,CNPD3C,ADAAA,ADAAA,AGAAI,IDAT,ADAA,ADAA,CEAeH,ADAAA,ADAAA,KEAf,ADAA,ADAA,EEAsB,ADAA,ADAA,AQON2C,ELPhB,AKME,CLNuBvC,KAAzB,EAAgCC,EAAhC,EAAoCC,GAApC,EAAyCC,IAAzC,EAA+C;AIA/C,ALCEN,ADAAA,ADAAA,AGAA,AKOEyD,ENPFzD,ADAAA,ADAAA,AQOEyD,EAAE,EAAE,CLPDrD,EDAE,ADAA,ADAA,AGAP,CDAQH,ADAAA,ADAAA,EGAEG,CDAV,ADAA,ADAA,CEAY,ADAA,ADAA,AGAZ,GKKA,MRLA,IEAA,KDAA;ACCD,ADAA,ADCC,AGDA,AKOEsD,EAAAA,KLPGrD,EHCE,CGDP,CHCA,EGDWA,AKOE,EFPA,AEOE,CLPD,IAAI,IAAlB,SGAcN,KAAD;ACDf,APKC,AGHC,AGDa,AEIb,CAJa,EASb,ILRKI,EGDmB,GHCxB,GAAaA,KAAb,aGDoCJ,KAAZ,CAAX;AHEb,ACAF,AEFe,AEUXoD,EAAAA,IAAI,CLRD7C,CKQGmC,GLRR,GAAY,CDAC3C,ADAAA,AEAA,CAACQ,IAAd,CKQcsC,MADd;ADTF,AJGC,AKQGY,EAAAA,IAAI,EAAE,ORLK1D;AQGb,CATa,CAAf;ADCA,AJIA,AKUA,SLVSS,QKUJyC,ELVL,CAAqB7C,GKUrB,ELVA,EAA4BK,IAA5B,EAAkC;AAChC,MAAIA,IAAI,CAACC,IAAT,EAAeD,IAAI,CAACC,IAAL,CAAUC,IAAV,GAAiBF,IAAI,CAACE,IAAtB;AACf,AKUFqC,MLVMvC,IAAI,CAACE,EKUL4C,ELVJ,EAAe9C,IAAI,CAACE,CKUtB,CAAiBa,ELVA,CAAUd,GKU3B,CLViB,AKUO,GLVUD,IAAI,CAACC,EKUfkD,ELVP,CKUU;ALTzBnD,AKSyB,ELTzBA,IAAI,CAACH,EKSwBL,CLT7B,GAAWQ,GKSyB,CLTrB,AKSsBP,CLTrBG,EAAL,AKSkB,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","file":"test.e98b79dd.js","sourceRoot":"..","sourcesContent":["function init (props) {\n  console.log('ga init')\n\n  return {\n\n  }\n}\n\nexport default init","function init (props) {\n  console.log('functionnal init')\n}\n\nexport default init","function init (props) {\n  console.log('custom init')\n}\n\nexport default init","function SignalListener (owner, fn, ctx, once) {\n  this.fn = fn\n  this.ctx = ctx || null\n  this.owner = owner\n  this.once = !!once\n}\n\nfunction removeNode (owner, node) {\n  if (node.prev) node.prev.next = node.next\n  if (node.next) node.next.prev = node.prev\n  node.ctx = node.fn = node.owner = null\n  if (node === owner._first) owner._first = node.next\n  if (node === owner._last) owner._last = node.prev\n}\n\n/**\n * Create a new Signal instance\n * @class\n * @constructor\n * @return {Signal} A new signal\n * @example\n * import { Signal } from '@internet/state'\n * const click = new Signal()\n * document.addEventListener('click', click.dispatch)\n *\n * class Component {\n *   constructor () {\n *     click.listen(this.onClick, this)\n *   }\n *\n *   onClick () {\n *     // `this` is the component instance\n *     console.log('clicked')\n *   }\n *\n *   dispose () {\n *     click.unlisten(this.onClick, this)\n *   }\n * }\n */\nfunction Signal () {}\n\n/**\n * Dispatches the signal to all listeners.\n * @method\n * @param {...*} [arguments] Arguments passed to each listeners (:warning: 5 maximum)\n */\nSignal.prototype.dispatch = function (a0, a1, a2, a3, a4) {\n  var node = this._first\n  while (node) {\n    node.fn.call(node.ctx, a0, a1, a2, a3, a4)\n    node.once && this.unlisten(node)\n    node = node.next\n  }\n}\n\n/**\n * Register a new listener\n * @method\n * @param {Function} callback Callback function\n * @param {*} [context] The context to bind the callback to\n * @return {SignalListener} A SignalListener instance containing bindings to the signal.\n */\nSignal.prototype.listen = function (fn, ctx, once) {\n  var node = new SignalListener(this, fn, ctx, once)\n  if (!this._first) {\n    this._first = node\n    this._last = node\n  } else {\n    this._last.next = node\n    node.prev = this._last\n    this._last = node\n  }\n  return node\n}\n\n/**\n * Register a new listener that will be executed only once.\n * @method\n * @param {Function} callback Callback function\n * @param {*} [context] The context to bind the callback to\n * @return {SignalListener} A SignalListener instance containing bindings to the signal.\n */\nSignal.prototype.listenOnce = function (fn, ctx) {\n  return this.listen(fn, ctx, true)\n}\n\n/**\n * Detach a listener from the signal\n * You can also pass\n * @method\n * @param {(Function|SignalListener)} callback The callback used when listening to the signal **OR** The SignalListener instance returned when listening the signal\n * @param {*} [context] The context used when listening to the signal (only when the 1st arg is a function)\n * @example\n * import { Signal } from '@internet/state'\n * const signal = new Signal()\n *\n * // Using the SignalListener binding (better performances)\n * const binding = signal.listen(() => {})\n * signal.unlisten(binding)\n *\n * // Using function\n * function listener () {}\n * signal.listen(listener)\n * signal.unlisten(listener)\n */\nSignal.prototype.unlisten = function (fn, ctx) {\n  if (fn instanceof SignalListener) return removeNode(this, fn)\n  if (!ctx) ctx = null\n  var node = this._first\n  while (node) {\n    if (node.fn === fn && node.ctx === ctx) removeNode(this, node)\n    node = node.next\n  }\n}\n\n/**\n * Remove all listeners attached to the signal instance\n * @method\n */\nSignal.prototype.unlistenAll = function () {\n  var node = this._first\n  this._first = this._last = null\n  while (node) {\n    removeNode(this, node)\n    node = node.next\n  }\n}\n\nexport default Signal\n","'use strict'\n\nimport Signal from './Signal'\n\n/**\n * StoreSignal created by [createStore](#createStore).\n * Inherits from [Signal](#Signal) - See its API for `listen` / `unlisten` methods\n *\n * :warning: `dispatch()` method from Signal is removed and replaced by a `set()` method\n * @param {*} initialValue Initial value\n * @augments Signal\n * @return {StoreSignal} StoreSignal instance\n */\nfunction StoreSignal (value) { this.current = value }\nStoreSignal.prototype = Object.create(Signal.prototype)\nStoreSignal.prototype.constructor = StoreSignal\nStoreSignal.prototype.dispatch = undefined\n\n/**\n * Change the stored value. Dispatch to all listeners the new value\n * @method\n * @param {*} newValue New value to store\n * @param {boolean} [force=false] Nothing is distpatched if the value doesn't change. Set force to true to `force` the dispatch.\n * @return {SignalListener} A SignalListener instance containing bindings to the signal.\n */\nStoreSignal.prototype.set = function (value, force) {\n  if (!force && this.current === value) return\n  this.current = value\n  var node = this._first\n  while (node) {\n    node.once && this.unlisten(node)\n    node.fn.call(node.ctx, this.current)\n    node = node.next\n  }\n}\n\n/**\n * Get current stored value\n * @method\n * @return {*} Current stored value\n */\nStoreSignal.prototype.get = function (value) {\n  return this.current\n}\n\n/**\n * Create a new store containing [StoreSignal](#StoreSignal) instances\n * @param {Object} state Initial state\n * @return {Object} Frozen object containing [StoreSignal](#StoreSignal) instances\n * @example\n * import { createStore } from '@internet/state'\n * const store = createStore({\n *   value: 0\n * })\n *\n * store.value.listen(v => console.log(`value is now ${v}`))\n * store.value.set(3)\n */\nfunction createStore (state) {\n  var signals = {}\n  for (var k in state) signals[k] = new StoreSignal(state[k])\n  signals = Object.freeze(signals)\n  return signals\n}\n\nexport default createStore\n","'use strict'\n\nimport createStore from './createStore'\nimport Signal from './Signal'\n\nexport { createStore, Signal }\n","import { createStore } from './state'\n\nexport default (props) => createStore(props)\n","import ga from './src/ga.js'\nimport functional from './src/functional.js'\nimport custom from './src/custom.js'\nimport createStore from './src/store'\n\nconst TYPES = {\n  GA: 0,\n  FUNCTIONAL: 1,\n  CUSTOM: 2\n}\n\nconst plugins = {}\nconst storeValues = {}\nlet store\n\nfunction init (params) {\n  params.forEach(plugin => {\n    if (plugin.type === TYPES.GA) {\n      storeValues.performance = false\n      plugins.ga = ga(plugin)\n    } else if (plugin.type === TYPES.FUNCTIONAL) {\n      storeValues.functional = false\n      plugins.func = functional(plugin)\n    } else if (plugin.type === TYPES.CUSTOM) {\n      storeValues[plugin.name] = false\n      plugins[plugin.name] = custom(plugin)\n    }\n  })\n\n  store = createStore(storeValues)\n\n  return {\n    plugins,\n    store: store\n  }\n}\n\nexport {\n  init,\n  store,\n  TYPES,\n}","import {init, TYPES, store} from './index'\n\nconst params = [\n  {\n    type: TYPES.FUNCTIONAL,\n  },\n  {\n    type: TYPES.GA,\n    UA: 'IZDJID-ZA',\n    anonymizeIp: true\n  },\n  {\n    type: TYPES.CUSTOM,\n    name: 'test'\n  }\n]\n\ninit(params)\n\nstore.functional.listen(val => console.log(val))"]}